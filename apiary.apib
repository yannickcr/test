FORMAT: X-1A

# Requests API
Following [Responses](https://github.com/apiaryio/api-blueprint/blob/master/examples/5.%20Responses.md) discussion, this API will show you how to define multiple requests and what data can a request bear. Let's demonstrate multiple request on `POST` method of our resource.

## Previous Example
[Responses](https://github.com/apiaryio/api-blueprint/blob/master/examples/5.%20Responses.md)

## Next Example
[Headers](https://github.com/apiaryio/api-blueprint/blob/master/examples/7.%20Headers.md)

---

# My First Section

## My Super Awesome Message [/message]

### Retrieve Message [GET]

+ Response 200 (application/json)

  This is *"all good"* response. Returned when everything went well. It bears our **message** to the world.

    + Headers

            X-My-Header: 42
            X-My-Another-Header: This is it.

    + Body

            { "message" : "Hello World!" }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-03/schema",
              "id": "http://jsonschema.net",
              "required": false,
              "type": "object",
              "properties": {
                "message": {
                  "id": "http://jsonschema.net/message",
                  "required": false,
                  "type": "string"
                }
              }
            }

+ Response 404 (text/plain)

  This is the **infamous 404**. Something went wrong and our message was not found.

    + Body

            Not Found.
        
### Create Message [POST]
In API Blueprint request can hold the exactly same kind of information, that is it is described by exactly same structure as response only with different signature. 

# GET /message_of_the_day
Retrieves message of the day.

## Response 200 (application/json)
    { "message" : "Hello World" }

+ Request Create Message (application/json)
  
  This is our first request named `Create Message`.

    + Headers

            X-My-Request-Header: 42
    
    + Body
        
            { "message" : "A message to be posted." }

    + Schema

            { ... }

+ Request Duplicate Message (application/json)
  
  This is our second request named `Duplicate Message`.
    
    + Body
        
            { "url" : "http://messageoftheday.org" }

    + Schema

            { ... }            
        
+ Response 201 (text/plain)
        
        Created.